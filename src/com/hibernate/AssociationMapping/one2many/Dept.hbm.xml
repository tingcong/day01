<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping package="com.hibernate.AssociationMapping.one2many" auto-import="true">
    <class name="Dept" table="t_dept">
        <id name="deptId">
            <generator class="native"></generator>
        </id>
        <property name="deptName" length="20"></property>

        <!--
            一对多关联映射配置  （通过部门管理到员工）
            Dept 映射关键点：
            1.  指定 映射的集合属性： "emps"
            2.  集合属性对应的集合表： "t_employee"
            3.  集合表的外键字段   "t_employee. dept_id"
            4.  集合元素的类型

            inverse=false  set集合映射的默认值； 表示有控制权
         -->
     <!--   cascade和inverse有什么区别？
        可以这样理解，cascade定义的是关系两端对象到对象的级联关系；而inverse定义的是关系和对象的级联关系。
        all : 所有情况下均进行关联操作。
        none：所有情况下均不进行关联操作。这是默认值。
        save-update:在执行save/update/saveOrUpdate时进行关联操作。
        delete：在执行delete时进行关联操作。
        all的意思是save-update + delete
        all-delete-orphan 的意思是当对象图中产生孤儿节点时,在数据库中删除该节点
        all比较好理解,举个例子说一下all-delete-orphan:
        Category与Item是一对多的关系,也就是说Category类中有个Set类型的变量items.
        举个例子,现items中存两个Item, item1,item2,如果定义关系为all-delete-orphan
        当items中删除掉一个item(比如用remove()方法删除item1),那么被删除的Item类实例
        将变成孤儿节点,当执行category.update(),或session.flush()时
        hibernate同步缓存和数据库,会把数据库中item1对应的记录删掉-->
        <set name="emps" cascade="save-update,delete" table="t_employee" inverse="true">
            <key column="dept_id"></key>
            <one-to-many class="Employee"></one-to-many>
        </set>
    </class>
</hibernate-mapping>